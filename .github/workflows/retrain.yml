name: Daily Retrain and Monitor

on:
  push:
    paths:
      - "data/interactions.csv"
  schedule:
    - cron: "0 2 * * *" # Run daily at 2 AM
  workflow_dispatch:

jobs:
  retrain_and_monitor:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}

    steps:
      - name: ‚¨áÔ∏è Checkout Repo
        uses: actions/checkout@v3

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: requirements.txt

      - name: üì¶ Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
          pip install dvc[s3] wandb

      # - name: üß™ Generate New Synthetic Data
      #   run: |
      #     python generate_data.py  # optional, tergantung use case kamu
      - name: DVC Pull
        run: |

          dvc remote modify s3remote endpointurl https://s3.$AWS_DEFAULT_REGION.amazonaws.com
          dvc remote modify s3remote access_key_id $AWS_ACCESS_KEY_ID
          dvc remote modify s3remote secret_access_key $AWS_SECRET_ACCESS_KEY
          dvc remote default s3remote
          dvc pull

      - name: üßº Preprocess and Split Data
        run: |
          python steps_model/preprocess_and_split.py

      - name: üéØ Run Training Pipeline
        run: |
          python mlops.py

      - name: üìä Run Monitoring Reports
        run: |
          python monitoring.py

      - name: ‚¨ÜÔ∏è Push DVC to S3 Remote
        run: |
          dvc add data/interactions.csv
          dvc add data/train.csv
          dvc add data/test.csv
          dvc push
      - name: üê≥ Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin 807172404961.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

      - name: üèóÔ∏è Build and Push Docker image
        run: |
          IMAGE_URI=807172404961.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/kurniaman/recommendation-system:latest
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: üöÄ Force ECS Service to Redeploy New Image
        run: |
          aws ecs update-service \
            --cluster flask-cluster \
            --service recommendation-task-service-gjn0sc1r \
            --force-new-deployment

      - name: ‚úÖ Done
        run: echo "MLOps pipeline finished successfully!"
